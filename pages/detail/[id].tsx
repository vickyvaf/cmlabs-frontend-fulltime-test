import { GetServerSidePropsContext } from "next";
import { api } from "../api";
import Head from "next/head";
import Image from "next/image";

interface Detail {
  datas: {
    idMeal: string;
    strMeal: string;
    strDrinkAlternate: string | null;
    strCategory: string;
    strArea: string;
    strInstructions: string;
    strMealThumb: string;
    strTags: null;
    strYoutube: string | null;
    strIngredient1: string;
    strIngredient2: string;
    strIngredient3: string;
    strIngredient4: string;
    strIngredient5: string;
    strIngredient6: string;
    strIngredient7: string;
    strIngredient8: string;
    strIngredient9: string;
    strIngredient10: string;
    strIngredient11: string;
    strIngredient12: string;
    strIngredient13: string;
    strIngredient14: string;
    strIngredient15: string;
    strIngredient16: string;
    strIngredient17: string;
    strIngredient18: string;
    strIngredient19: string;
    strIngredient20: string;
    strMeasure1: string;
    strMeasure2: string;
    strMeasure3: string;
    strMeasure4: string;
    strMeasure5: string;
    strMeasure6: string;
    strMeasure7: string;
    strMeasure8: string;
    strMeasure9: string;
    strMeasure10: string;
    strMeasure11: string;
    strMeasure12: string;
    strMeasure13: string;
    strMeasure14: string;
    strMeasure15: string;
    strMeasure16: string;
    strMeasure17: string;
    strMeasure18: string;
    strMeasure19: string;
    strMeasure20: string;
    strSource: string | null;
    strImageSource: string | null;
    strCreativeCommonsConfirmed: string | null;
    dateModified: Date | string | null;
  };
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const { params } = context;
  const response = await fetch(api.detail + params?.id);
  const datas = await response.json();

  if (!datas.meals) {
    context.res.setHeader("Location", "/");
    context.res.statusCode = 302;
    context.res.end();
  }

  return {
    props: {
      datas: datas.meals[0],
    },
  };
}

const getYoutubeId = (text: string): string => {
  return text.slice(32, 100);
};

export default function Detail({ datas }: Detail) {
  return (
    <>
      <Head>
        <title>{datas.strMeal}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="px-5 mx-auto max-w-7xl font-main">
        <h1 className="text-4xl font-bold my-5 border-b-[1px] pb-5">
          {datas.strMeal}
        </h1>
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-5">
          <Image
            src={datas.strMealThumb}
            alt="photo"
            width={600}
            height={500}
            className="rounded-lg mx-auto"
          />
          <div>
            <h1 className="text-3xl font-semibold mb-2">Instructions</h1>
            <span className="text-base">{datas.strInstructions}</span>
            <h1 className="text-3xl font-semibold mt-8 mb-2">Recipes</h1>
            <div className="grid grid-cols-2 gap-5">
              <ol className="text-base">
                <li>
                  {datas.strIngredient1 && "1. " + datas.strIngredient1}{" "}
                  {datas.strMeasure1}
                </li>
                <li>
                  {datas.strIngredient2 && "2. " + datas.strIngredient2}{" "}
                  {datas.strMeasure2}
                </li>
                <li>
                  {datas.strIngredient3 && "3. " + datas.strIngredient3}{" "}
                  {datas.strMeasure3}
                </li>
                <li>
                  {datas.strIngredient4 && "4. " + datas.strIngredient4}{" "}
                  {datas.strMeasure4}
                </li>
                <li>
                  {datas.strIngredient5 && "5. " + datas.strIngredient5}{" "}
                  {datas.strMeasure5}
                </li>
                <li>
                  {datas.strIngredient6 && "6. " + datas.strIngredient6}{" "}
                  {datas.strMeasure6}
                </li>
                <li>
                  {datas.strIngredient7 && "7. " + datas.strIngredient7}{" "}
                  {datas.strMeasure7}
                </li>
                <li>
                  {datas.strIngredient8 && "8. " + datas.strIngredient8}{" "}
                  {datas.strMeasure8}
                </li>
                <li>
                  {datas.strIngredient9 && "9. " + datas.strIngredient9}{" "}
                  {datas.strMeasure9}
                </li>
                <li>
                  {datas.strIngredient10 && "10. " + datas.strIngredient10}{" "}
                  {datas.strMeasure10}
                </li>
              </ol>
              <ol className="text-base">
                <li>
                  {datas.strIngredient11 && "11. " + datas.strIngredient11}{" "}
                  {datas.strMeasure11}
                </li>
                <li>
                  {datas.strIngredient12 && "12. " + datas.strIngredient12}{" "}
                  {datas.strMeasure12}
                </li>
                <li>
                  {datas.strIngredient13 && "13. " + datas.strIngredient13}{" "}
                  {datas.strMeasure13}
                </li>
                <li>
                  {datas.strIngredient14 && "14. " + datas.strIngredient14}{" "}
                  {datas.strMeasure14}
                </li>
                <li>
                  {datas.strIngredient15 && "15. " + datas.strIngredient15}{" "}
                  {datas.strMeasure15}
                </li>
                <li>
                  {datas.strIngredient16 && "16. " + datas.strIngredient16}{" "}
                  {datas.strMeasure16}
                </li>
                <li>
                  {datas.strIngredient17 && "17. " + datas.strIngredient17}{" "}
                  {datas.strMeasure17}
                </li>
                <li>
                  {datas.strIngredient18 && "18. " + datas.strIngredient18}{" "}
                  {datas.strMeasure18}
                </li>
                <li>
                  {datas.strIngredient19 && "19. " + datas.strIngredient19}{" "}
                  {datas.strMeasure19}
                </li>
                <li>
                  {datas.strIngredient20 && "20. " + datas.strIngredient20}{" "}
                  {datas.strMeasure20}
                </li>
              </ol>
            </div>
          </div>
        </div>
        {datas.strYoutube ? (
          <div className="flex flex-col justify-center w-full">
            <h1 className="text-3xl text-center font-semibold mt-10 mb-5">
              Tutorials
            </h1>
            <iframe
              className="w-80 sm:w-[500px] md:w-[700px] md:h-[400px] lg:w-full lg:h-[600px] mx-auto"
              src={`https://www.youtube.com/embed/${getYoutubeId(
                datas.strYoutube
              )}`}
            ></iframe>
          </div>
        ) : null}
      </div>
    </>
  );
}
