import { GetServerSidePropsContext } from "next";
import { api } from "../api";
import CardIngredientName from "@/components/CardIngredientName";
import Head from "next/head";
import { useState } from "react";
import { AiOutlineSearch } from "react-icons/ai";

interface Meal {
  idMeal: string;
  strMeal: string;
  strMealThumb: string;
}

interface Props {
  datas: Meal[];
  name: string;
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const { params } = context;
  const response = await fetch(api.filterIngredients + params?.name);
  const datas = await response.json();

  if (!datas.meals) {
    context.res.setHeader("Location", "/");
    context.res.statusCode = 302;
    context.res.end();
  }

  return {
    props: {
      datas: datas.meals,
      name: params?.name,
    },
  };
}

export default function Ingredient({ datas, name }: Props) {
  const [search, setSearch] = useState<string>("");

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
  };

  return (
    <>
      <Head>
        <title>{name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-7xl mx-auto px-5">
        <div className="w-full flex flex-col md:flex-row justify-between items-center my-5 md:my-2">
          <h1 className="text-2xl md:text-3xl uppercase my-5 font-main font-bold mr-auto md:mr-5">
            {name}
          </h1>
          <form
            onSubmit={handleSearch}
            className="bg-slate-200 flex justify-between items-center px-5 rounded-full w-full md:w-[40%] relative"
          >
            <input
              value={search}
              onChange={(e) => setSearch(e.target.value)}
              placeholder="Search..."
              className="bg-slate-200 p-2 pr-4 md:pr-6 md:py-2 md:px-2 outline-none w-[500px] font-main"
            />
            <AiOutlineSearch className="cursor-pointer absolute right-3 w-5 h-5" />
          </form>
        </div>
        <ul className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-5">
          {datas
            ?.filter((data) => data.strMeal.toLowerCase().includes(search))
            ?.map((data: Meal) => {
              return (
                <CardIngredientName
                  idMeal={data.idMeal}
                  strMeal={data.strMeal}
                  strMealThumb={data.strMealThumb}
                />
              );
            })}
        </ul>
      </div>
    </>
  );
}
